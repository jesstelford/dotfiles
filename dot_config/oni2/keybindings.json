[
  // See the onivim documentation for details on the format:
  // https://onivim.github.io/docs/configuration/key-bindings

  // Easier tab navigation with Cmd-Alt-Left/Right in vim-tabs mode
  //{ "key": "<D-A-Left>", "command": ":tabprevious", "when": "editorTextFocus" },
  //{ "key": "<D-A-Right>", "command": ":tabnext", "when": "editorTextFocus" },

  // Easier tab navigation with Cmd-Alt-Left/Right in Onivim windows mode
  {
    "key": "<D-A-Left>",
    "command": "workbench.action.previousEditor",
    "when": "editorTextFocus"
  },
  {
    "key": "<D-A-Right>",
    "command": "workbench.action.nextEditor",
    "when": "editorTextFocus"
  },

  // Easier suggestion completion with Tab + Enter
  // From: https://github.com/onivim/oni2/issues/1423#issuecomment-696768870
  //{
  //  "key": "<S-Tab>",
  //  "command": "selectPrevSuggestion",
  //  "when": "editorTextFocus && suggestWidgetVisible"
  //},
  //{
  //  "key": "<Tab>",
  //  "command": "selectNextSuggestion",
  //  "when": "editorTextFocus && suggestWidgetVisible"
  //},
  //{
  //  "key": "<CR>",
  //  "command": "acceptSelectedSuggestion",
  //  "when": "suggestWidgetVisible && editorTextFocus"
  //},

  // Use <Tab> to accept auto-completion suggestion
  {
    "key": "<Tab>",
    "command": "acceptSelectedSuggestion",
    "when": "suggestWidgetVisible && editorTextFocus"
  },

  // Use up/down to navigate auto-completion suggestion
  {
    "key": "<Down>",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetVisible"
  },
  {
    "key": "<Up>",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetVisible"
  },

  // Navigate lists with Ctrl-j/k
  // From: https://github.com/onivim/oni2/issues/1423#issuecomment-791775748
  { "key": "ctrl+k", "command": "list.focusUp", "when": "listFocus" },
  { "key": "ctrl+j", "command": "list.focusDown", "when": "listFocus" },
  {
    "key": "<leader>f",
    "command": "workbench.action.quickOpen",
    "when": "!insertMode"
  },
  {
    "key": "<leader>b",
    "command": "workbench.action.quickOpenBuffer",
    "when": "!insertMode"
  }
]
